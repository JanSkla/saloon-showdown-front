/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.4.1 public\models\lobbyPositions\lobbyPositions.gltf src\components\models 
*/
import * as THREE from 'three';
import React, { useContext } from 'react'
import { Text, useGLTF } from '@react-three/drei'
import { RoomContext } from '../../utilComponents/RoomDataProvider';

export default function LobbyPositions() {
  const { nodes, materials } = useGLTF('/models/lobbyPositions/lobbyPositions.gltf')
  const whiteMaterial = new THREE.MeshBasicMaterial({toneMapped: false, fog: false, side: THREE.DoubleSide, depthTest: false});

  const {players, thisPID} = useContext(RoomContext);

  if(!Array.isArray(players)) return;

  const leader = players.find(plr => plr.isLeadPlayer);

  if(!leader) return;

  players.splice(players.indexOf(leader), 1);
  players.unshift(leader);

  const getPlayerTag = (player) => {
    return `${player.pId === thisPID ? "(YOU)" : ''}${player.isLeadPlayer ? "🎖️" : ""}${player.name}`;
  }

  return (
    <group dispose={null} renderOrder={1}>
      {players[0] &&
      <mesh geometry={nodes['cowboy-idle0001001'].geometry} material={materials['cowboy-idle0001']} position={[14.102, 3.3, 0.469]} rotation={[-Math.PI / 2, 0, 1.745]} scale={-5.771}>
        <Text rotation={[-Math.PI / 2, Math.PI, 0]} position={[0,0,-0.6]} color="white" fontSize={0.1} material={whiteMaterial}>{getPlayerTag(players[0])}</Text>
      </mesh>}
      {players[1] &&
      <mesh geometry={nodes['cowboy-idle0000'].geometry} material={materials['cowboy-idle0000']} position={[20.798, 2.528, 6.04]} rotation={[-Math.PI / 2, 0, 1.745]} scale={-4.933} >
        <Text rotation={[-Math.PI / 2, Math.PI, 0]} position={[0,0,-0.6]} color="white" fontSize={0.1} material={whiteMaterial}>{getPlayerTag(players[1])}</Text>
      </mesh>}
      {players[2] &&
      <mesh geometry={nodes['cowboy-idle0002'].geometry} material={materials['cowboy-idle0002']} position={[18.185, 1.178, -0.42]} rotation={[-1.601, -0.005, 1.745]} scale={-3.267}>
       <Text rotation={[-Math.PI / 2, Math.PI, 0]} position={[0,0,-0.6]} color="white" fontSize={0.15} material={whiteMaterial}>{getPlayerTag(players[2])}</Text>
      </mesh>}
      {players[3] &&
      <mesh geometry={nodes['cowboy-idle0000001'].geometry} material={materials['cowboy-idle0000']} position={[16.074, 9.84, -8.794]} rotation={[Math.PI / 2, 0, -1.745]} scale={4.933}>
       <Text rotation={[-Math.PI / 2, 0, 0]} position={[0,0,-0.6]} color="white" fontSize={0.1} material={whiteMaterial}>{getPlayerTag(players[3])}</Text>
      </mesh>}
      {players[4] &&
      <mesh geometry={nodes['cowboy-idle0001'].geometry} material={materials['cowboy-idle0001']} position={[11.959, 3.304, -8.673]} rotation={[Math.PI / 2, 0, -1.745]} scale={5.771}>
       <Text rotation={[-Math.PI / 2, 0, 0]} position={[0,0,-0.6]} color="white" fontSize={0.1} material={whiteMaterial}>{getPlayerTag(players[4])}</Text>
      </mesh>}
      {players[5] &&
      <mesh geometry={nodes['cowboy-idle0002001'].geometry} material={materials['cowboy-idle0002']} position={[18.497, 9.638, 3.36]} rotation={[1.541, 0.005, -1.745]} scale={3.267}>
       <Text rotation={[-Math.PI / 2, 0, 0]} position={[0,0,-0.6]} color="white" fontSize={0.15} material={whiteMaterial}>{getPlayerTag(players[5])}</Text>
      </mesh>}
    </group>
  )
}

useGLTF.preload('/lobbyPositions.gltf')
